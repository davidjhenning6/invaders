- Assignment 3 - Enemy AI and Animation
- -------------------------------------
- Due. March 8, 2019
- 
- Add animated opponents to the game which move and try to pick up humans.
- 
- 
- 1. AI Opponents - Animation
- ---------------------------
- 
- Create opponents and animate them in the game. Draw them by placing
- values in the world array. You can animate their motion and make them move
- by updating the values in the world array.
- 
- They should have a similar appearance to the enemies in the original Defender
- game given the constraints of the block based environment in which
- the assignment is written. Pictures of the original game can be found at:
- 	http://www.gamasutra.com/view/feature/132467/the_history_of_defender_the_joys_.php
- 
- Create the Lander enemy from the original game.
- The agent will need to be drawn with multiple blocks simultaneously.
- They should not appear as a single cube and they should occupy several squares
- at one time. For example, a 3x3x3 cube would be a reasonable size for a agent
- to occupy. They could be larger than this if your environment can hold a
- larger agent. It would be difficult to make a convincing agent in a 2x2x2
- space.
- 
- 
- 2. AI Agents - Movement and Picking Up Humans
- ---------------------------------------------
- Humans will need to start on the ground for this assignment. Place multiple
- humans on the ground across the world. The humans do not move unless they are
- picked up by the agents.  The AI agents will move around the game world and
- try to pick up a human when they find one.
- 
- 
- The algorithm for the AI agents (aliens) has a starting condition (a.)
- and three states (b. c. and d.).
- a. The AI agents should start they game by being placed randomly around the
-    game world. They should not start too near the ground. Choose an elevation
-    that ensure they agents wont collide with the ground. Pick a number of
-    agents that makes it easy
-    to see their actions in the game.
- 
- b. If nothing else is happening the AI agents should move around the world
-    space searching for a human on the ground. The motion for the agent should
-    be calculated using two vectors. One vector in the x direction, the other
-    in the z direction. These can be positive or negative numbers and they
-    represent how far the agent will move in each time step. Each time the
-    agent moves it should add both the x and z vector to its current location
-    and draw the agent at that position.  This should cause the agent to move
-    in a straight line. You can randomly initialize the two direction vectors
-    so the agents all move in different directions. Pick small floating point
-    random numbers. It is probably a good idea to not make the vector size too
-    large or the agent will appear to jump around instead of appearing to move
-    smoothly. Don't pick numbers that are so small that the agent moves too
-    slowly. At this point in the game the agents do not need to move up and
-    down (in the y axis). You can make them move in the y axis if you wish
-    in a manner similar to the original game.
- 
-    If the agent reaches the edge of the world space (<0 or >299) then
-    change the sign of one of the motion vectors. This will cause the agent
-    to move away from the edge of the world. They will appear to bounce
-    off the edge of the world. For example, if the x location is 299 and
-    the x vector is +1 then the agent would move outside the world space.
-    Invert the sign on the vector so it will become -1 and then add it to
-    the position. This should move the agent to an x location of 298.
-    They should continue to move in this direction until they reach another
-    edge of the world space or they change to state c.
- 
- c. If the agent gets near to a human they should move in a straight line
-    towards the human. You will need to calculate the path from the current
-    location of the agent to the location of the human on the ground.
-    The agent should move so that it will arrive centred above the human.
- 
- d. Once the agent is directly above the human, both of them should begin to
-    move straight up.  This should occur fairly slowly. If they reach the top
-    of the world then both the agent and the human should be removed from the
-    game and a message should be printed to the screen indicating that a human
-    was lost. Both the agent and the human should be visible when this is
-    occurring.
- 
- 
- Have the agents move at a reasonable speed. Pick a speed that makes
- the game playable.
- 
- Write the AI using a state machine where the agent is either searching
- for humans, moving to pick to pick up a human, or is flying away
- with a human. 
- 
- 
- 3. Shooting the Aliens
- ----------------------
- The player can shoot the agents or the humans using the ray function
- created for assignment 2. If the ray intersects a cube that represents
- the agent or the human then the game should respond accordingly. 
- 
- If the ray intersects an agent then the agent should be removed from
- the game and the human should slowly begin to fall towards the ground.
- If they fall a relatively small distance (perhaps 10 units) they should
- land safely on the ground. If they fall more than this height then they
- should disappear when they collide with the ground and a message should
- be printed out that a human was lost.
- 
- If the ray intersects a human then the human is removed from the game.
- A message should be printed that a human was lost. The agent is not
- automatically removed if the human is struck by the ray. If the agent
- loses the human then it should resume searching for a human as described
- in state b. above.
- 
- 
- State Machine
- -------------
- The state machine for the game should be something like this:
- 
-                                              yes                 reach human
- Initialize  ---> Searching  ---> See Human  ----->  Move toward---------
- Agents (a.)      Movement (b.)    |      A          Human (c.)         |
-                   A  A            |no    |           |                 |
-                   |  |____________|      |___________|                 |
-                   |                       don't reach                  |    ___
-                   |                        human                       |   |   |
-                   |                                                    V   V   |move up
-                   |                                                Pick Up     |
-                   |_______________________________________________ Human (d.)__|
-                                        human shot                  |    |
-                                                                    |    |
-                                                                    |    |
-                                             _______________________|    |
-                                             |    agent shot             |
-                                    ______   |                           |
-                      don't reach  |      V  V                           |
-                      the ground   |       Human                         V
-                                   |______ Falls                    Reach Top
-                                             |                      of Screen 
-                                             |                      -remove agent
-                                   reach the |                       and human
-                                   ground    |
-                                             |
-                                             V
-                                         Place human on ground
-                                         or remove.  
- 
- 
- NOTE: The above diagram only looks correct if viewed using a fixed size font (non-proportional font).
-  Download the file and look at it using another editor. 
-
- Update the Map
- --------------------
- 4. Draw the agents on the map. Update their position as they move.
-
- Coding Practices
- ----------------
- Write the code using standard stylistic practices. Use functions, 
- reasonable variable names, and consistent indentation.
- If the code is difficult for the TA to understand then you
- will lose marks.
- 
- As usual, keep backups of your work using source control software.
- 
- 
- Starting Code
- -------------
- The starting code is available on the Courselink site.
- You can untar the file using tar xf filename.
- 
- Note that the graphics code may be modified for later assignments. If you
- make changes to the graphics code (in graphics.c or visible.c) then you
- may have to recode the changes for a later assignment.
-   
- 
- Submitting the Assignment
- -------------------------
- NOTE: The assignment executable is named a1. Other files can be
- named with any reasonable filenames.
- 
- Submit the assignment using Courselink. Submit the files needed to
- build and run your program. Do not submit compiled code. Do submit the
- file used to build the height map (ground.pgm).  Bundle the code in a tar file.
- 
- Include a makefile that will compile the executable. Name the executable a1.
-  
- The TA will unpack your code and type "make". They will then try to
- run an executable named "./a1".  If the make command or executing a1
- does not work then you will lose a substantial number of marks.
- 
- It is always a good idea to unpack and test the file you are submitting
- to be sure that what you submit actually compiles and runs. 
  
  
  
